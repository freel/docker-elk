version: '3.2'
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch1
      discovery.seed_hosts: elasticsearch2,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
  
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch2
      discovery.seed_hosts: elasticsearch1,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch3
      discovery.seed_hosts: elasticsearch1,elasticsearch2
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.0
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - /usr/local/share/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - lsdata01:/usr/share/logstash/data
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    volumes:
      - kdata01:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:2888:3888
    ports:
      - 2181:2181
    network_mode: "host"
    extra_hosts: 
      - "moby:127.0.0.1"
    deploy:
      mode: replicated
      replicas: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
        - 9092:9092
    deploy:
      mode: replicated
      replicas: 3

  # kafka1:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
  #   ports:
  #     - 19092:19092
  #   deploy:
  #     mode: replicated
  #     replicas: 1

  # kafka2:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
  #   ports:
  #     - 29092:29092
  #   deploy:
  #     mode: replicated
  #     replicas: 1

  # kafka3:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092
  #   ports:
  #     - 39092:39092
  #   deploy:
  #     mode: replicated
  #     replicas: 1


volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  lsdata01:
    driver: local
  kdata01:
    driver: local

networks:
  elk:
    external: true
