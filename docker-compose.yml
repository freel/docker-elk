version: '3.2'
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch1
      discovery.seed_hosts: elasticsearch2,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
  
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch2
      discovery.seed_hosts: elasticsearch1,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch3
      discovery.seed_hosts: elasticsearch1,elasticsearch2
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.0
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - /usr/local/share/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - lsdata01:/usr/share/logstash/data
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    volumes:
      - kdata01:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  zookeeper1:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    ports:
      - 22181:22181
      - 22888:22888
      - 23888:23888
    extra_hosts: 
      - "moby:127.0.0.1"
    deploy:
      mode: replicated
      replicas: 1

  zookeeper2:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    ports:
      - 32181:32181
      - 32888:32888
      - 33888:33888
    extra_hosts: 
      - "moby:127.0.0.1"
    deploy:
      mode: replicated
      replicas: 1

  zookeeper3:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 42181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    ports:
      - 42181:42181
      - 42888:42888
      - 42888:43888
    extra_hosts: 
      - "moby:127.0.0.1"
    deploy:
      mode: replicated
      replicas: 1

  kafka1:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
    ports:
      - 19092:19092
    deploy:
      mode: replicated
      replicas: 1

  kafka2:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
    ports:
      - 29092:29092
    deploy:
      mode: replicated
      replicas: 1

  kafka3:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: localhost:22181,localhost:32181,localhost:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092
    ports:
      - 39092:39092
    deploy:
      mode: replicated
      replicas: 1


volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  lsdata01:
    driver: local
  kdata01:
    driver: local

networks:
  elk:
    external: true
