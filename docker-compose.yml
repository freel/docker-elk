version: '3.2'
services:
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch1
      discovery.seed_hosts: elasticsearch2,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
  
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch2
      discovery.seed_hosts: elasticsearch1,elasticsearch3
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      node.name: elasticsearch3
      discovery.seed_hosts: elasticsearch1,elasticsearch2
      cluster.initial_master_nodes: elasticsearch1,elasticsearch2,elasticsearch3
      bootstrap.memory_lock: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata03:/usr/share/elasticsearch/data
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.0
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - type: bind
        source: ./logstash/pipeline/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
      - lsdata01:/usr/share/logstash/data
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        failure_action: rollback
        parallelism: 1
        delay: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    volumes:
      - kdata01:/usr/share/kibana/data
    ports:
      - "5601:5601"
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    deploy:
      mode: replicated
      replicas: 3


  kafka:
    image: confluentinc/cp-kafka:5.1.0
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.128.0.5:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
    links:
      - zookeeper
    deploy:
      mode: replicated
      replicas: 3

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  lsdata01:
    driver: local
  kdata01:
    driver: local

networks:
  elk:
    external: true
